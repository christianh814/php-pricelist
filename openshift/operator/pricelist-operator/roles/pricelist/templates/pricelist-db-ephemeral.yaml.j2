apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: "{{ ansible_operator_meta.name }}-pricelist"
    tier: database
  name: "{{ ansible_operator_meta.name }}-pricelist-db"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ ansible_operator_meta.name }}-pricelist"
      tier: database
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "{{ ansible_operator_meta.name }}-pricelist"
        tier: database
    spec:
      containers:
      - image: registry.access.redhat.com/rhscl/mysql-56-rhel7:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3306
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              mysql -u root -e "SELECT 1"
          failureThreshold: 5
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: "{{ ansible_operator_meta.name }}-pricelist-db"
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: "{{ ansible_operator_meta.name }}-pricelist-creds"
              key: database
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ ansible_operator_meta.name }}-pricelist-creds"
              key: dbpassword
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: "{{ ansible_operator_meta.name }}-pricelist-creds"
              key: dbuser
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: "{{ ansible_operator_meta.name }}-pricelist-db-store"
      volumes:
      - name: "{{ ansible_operator_meta.name }}-pricelist-db-store"
        emptyDir: {}
